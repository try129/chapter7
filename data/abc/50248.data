{'PYTHONIOENCODING': 'UTF-8', 'GNOME_DESKTOP_SESSION_ID': 'this-is-deprecated', 'GJS_DEBUG_OUTPUT': 'stderr', 'XDG_CURRENT_DESKTOP': 'GNOME', 'XDG_SESSION_TYPE': 'x11', 'LOGNAME': 'root', 'USER': 'root', 'HOME': '/root', 'XDG_VTNR': '2', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'PYTHONUNBUFFERED': '1', 'DISPLAY': ':0', 'SSH_AGENT_PID': '1206', 'LANG': 'en_US.UTF-8', 'SHELL': '/bin/bash', 'XAUTHORITY': '/run/user/0/gdm/Xauthority', 'SESSION_MANAGER': 'local/kali:@/tmp/.ICE-unix/1140,unix/kali:/tmp/.ICE-unix/1140', 'XDG_DATA_DIRS': '/usr/share/gnome:/usr/local/share/:/usr/share/', 'QT_LINUX_ACCESSIBILITY_ALWAYS_ON': '1', 'QT_QPA_PLATFORMTHEME': 'qgnomeplatform', 'LD_LIBRARY_PATH': '/root/Downloads/pycharm-community-2017.1/bin:', 'QT_ACCESSIBILITY': '1', 'WINDOWPATH': '2', 'GIO_LAUNCHED_DESKTOP_FILE_PID': '1549', 'USERNAME': 'root', 'XDG_SESSION_DESKTOP': 'default', 'GIO_LAUNCHED_DESKTOP_FILE': '/root/.local/share/applications/jetbrains-pycharm-ce.desktop', 'XDG_RUNTIME_DIR': '/run/user/0', 'PYTHONPATH': '/root', 'SSH_AUTH_SOCK': '/run/user/0/keyring/ssh', 'GDMSESSION': 'default', 'XDG_SESSION_ID': '6', 'DBUS_SESSION_BUS_ADDRESS': 'unix:path=/run/user/0/bus', 'DESKTOP_SESSION': 'default', 'GTK_MODULES': 'gail:atk-bridge', 'GDM_LANG': 'en_US.UTF-8', 'PYCHARM_HOSTED': '1', 'PWD': '/root/trojan', 'XDG_MENU_PREFIX': 'gnome-', 'GJS_DEBUG_TOPICS': 'JS ERROR;JS LOG', 'XDG_SEAT': 'seat0'}